#!/usr/bin/python3

class Person:
    def __init__(self,n,a):
        self.__name = n
        self.age = a

    def get_name(self):
        return self.__name
    
    def say_hi(self):
        print("Hello world")

class Person2:
    """ this class use's private var with getter"""
    __counter = 0
    
    def __init__(self,name,age):
        self.set_name(name)
        self.set_age(age)
        Person2.__counter +=1

    def set_name(self,name):
        self.__name = name

    def get_name(self):
        return self.__name

    def set_age(self,age):
        if age<0:
            self.__age = 0
        elif age>100:
            self.__age=100
        else:    
            self.__age = age

    def get_age(self):
        return self.__age

    @classmethod
    def return_count(cls):
        return cls.__counter

class Person3:
""" declare public members but with accessors to verify the values """

    def __init__(self,name,age):
        self.name = name
        self.age = age
"""
    @property
    def name(self):
        return self.__name

    @name.setter
    def name(self,name):
        self.__name=name
"""
    @property
    def age(self):
        return self.__age

    @age.setter
    def age(self,age):
        if age<0:
            self.__age = 0
        elif age>100:
            self.__age=100
        else:
            self.__age = age

class Person3:
    """ easier way to do the same thing """

    def __init__(self,age):
        self.__set_age()

    def __get_age(self,age):
        self.__age = age
        
    def __set_age(self,age):
         if age<0:
            self.__age = 0
        elif age>100:
            self.__age=100
        else:
            self.__age = age
            
    age = property(__get_age,__set_age)        